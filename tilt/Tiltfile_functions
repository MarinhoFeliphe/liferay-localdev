# Tilt functions

def process_extension(
    name, projectPath, yamlTemplateName, virtual_instance_id='dxp.localdev.me', source_deps = [],
    objects = [], port_forwards = [], resource_deps = [], links = []):

  custom_build(
    name,
    "/workspace/gradlew :%s:buildClientExtensionDockerImage -PimageId=$EXPECTED_REF" % projectPath.replace("/", ":"),
    deps=[
      '/workspace/%s/src' % projectPath,
      '/workspace/%s/build.gradle' % projectPath,
      '/workspace/%s/client-extension.yaml' % projectPath,
      '/workspace/%s/build/Dockerfile' % projectPath,
    ] + source_deps,
    ignore=[])

  local("/workspace/gradlew :%s:createClientExtensionConfig --stacktrace" % projectPath.replace("/", ":"))

  config_json_file = "/workspace/%s/build/%s.client-extension-config.json" % (projectPath, name)
  watch_file(config_json_file)

  k8s_yaml(
    local("ytt -f /repo/k8s/%s -f %s --data-value image=%s --data-value serviceId=%s --data-value virtualInstanceId=%s" 
            % (yamlTemplateName, config_json_file, name, name, virtual_instance_id)))

  if yamlTemplateName != "extension_job":
    objects = [
      "%s:ingress" % name,
      "%s:ingressroute" % name
    ]

  k8s_resource(
    labels=['client-extensions'],
    port_forwards=port_forwards,
    objects=['%s-%s-lxc-ext-provision-metadata:configmap' % (name, virtual_instance_id)] + objects,
    resource_deps=resource_deps,
    workload=name,
    links=links)